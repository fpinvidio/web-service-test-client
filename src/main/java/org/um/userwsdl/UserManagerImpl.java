
package org.um.userwsdl;

import org.um.model.User;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebService(name = "UserManagerImpl", targetNamespace = "http://um.org/userwsdl")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface UserManagerImpl {


    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     * @throws InvalidUserException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "login", targetNamespace = "http://um.org/userwsdl", className = "org.org.um.userwsdl.Login")
    @ResponseWrapper(localName = "loginResponse", targetNamespace = "http://um.org/userwsdl", className = "org.org.um.userwsdl.LoginResponse")
    public String login(
            @WebParam(name = "arg0", targetNamespace = "")
            User arg0)
        throws InvalidUserException_Exception
    ;

    /**
     * 
     * @param arg0
     * @throws EmailAlreadyTakenException_Exception
     * @throws InvalidEmailException_Exception
     * @throws InvalidPasswordException_Exception
     * @throws InvalidRoleException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "register", targetNamespace = "http://um.org/userwsdl", className = "org.org.um.userwsdl.Register")
    @ResponseWrapper(localName = "registerResponse", targetNamespace = "http://um.org/userwsdl", className = "org.org.um.userwsdl.RegisterResponse")
    public void register(
            @WebParam(name = "arg0", targetNamespace = "")
            User arg0)
        throws EmailAlreadyTakenException_Exception, InvalidEmailException_Exception, InvalidPasswordException_Exception, InvalidRoleException_Exception
    ;

    /**
     * 
     * @param arg1
     * @param arg0
     * @throws InvalidTokenException_Exception
     * @throws PermissionDeniedException_Exception
     * @throws InvalidUserException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "delete", targetNamespace = "http://um.org/userwsdl", className = "org.org.um.userwsdl.Delete")
    @ResponseWrapper(localName = "deleteResponse", targetNamespace = "http://um.org/userwsdl", className = "org.org.um.userwsdl.DeleteResponse")
    public void delete(
            @WebParam(name = "arg0", targetNamespace = "")
            String arg0,
            @WebParam(name = "arg1", targetNamespace = "")
            User arg1)
        throws InvalidTokenException_Exception, InvalidUserException_Exception, PermissionDeniedException_Exception
    ;

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @throws PermissionDeniedException_Exception
     * @throws InvalidTokenException_Exception
     * @throws InvalidUserException_Exception
     * @throws InvalidPasswordException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "update", targetNamespace = "http://um.org/userwsdl", className = "org.org.um.userwsdl.Update")
    @ResponseWrapper(localName = "updateResponse", targetNamespace = "http://um.org/userwsdl", className = "org.org.um.userwsdl.UpdateResponse")
    public void update(
            @WebParam(name = "arg0", targetNamespace = "")
            String arg0,
            @WebParam(name = "arg1", targetNamespace = "")
            User arg1,
            @WebParam(name = "arg2", targetNamespace = "")
            String arg2)
        throws InvalidPasswordException_Exception, InvalidTokenException_Exception, InvalidUserException_Exception, PermissionDeniedException_Exception
    ;

}
